# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: SerialDeploy
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set git identity
        run: |-
          git config user.name "Automation"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with: {}
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        if: steps.cache-node.outputs.cache-hit != 'true'
      - name: Anti-tamper check
        run: git diff --exit-code
      - name: Build
        run: npx projen build
      - name: Anti-tamper check
        run: git diff --exit-code
  deploy-serialDemo:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: serialDemo
    env:
      STAGE: serialDemo
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with: {}
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        if: steps.cache-node.outputs.cache-hit != 'true'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          role-duration-seconds: 1200
      - name: Deploy All
        run: npx cdk deploy --all --require-approval never
  deploy-serialProd:
    needs:
      - build
      - deploy-serialDemo
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: serialProd
    env:
      STAGE: serialProd
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with: {}
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        if: steps.cache-node.outputs.cache-hit != 'true'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          role-duration-seconds: 1200
      - name: Deploy All
        run: npx cdk deploy --all --require-approval never
